import vapoursynth as vs
core = vs.get_core()
import fvsfunc as fvf
import mvsfunc as mvf
import kagefunc as kgf
import havsfunc as hvf
import vsTAAmbk as taa
import fag3kdb

src = core.ffms2.Source("")

dn = mvf.BM3D(src, sigma=1, radius1=1) #denoise
dn=fvf.ReplaceFramesSimple(src,dn,mappings="")#[1463 1606] [3491 3538] [4259 4378]")
# [4471 4590]

#anti-aliasing
#aa = taa.TAAmbk(dn,aatype=-2,strength=0.5)
#sf=fvf.ReplaceFramesSimple(dn,aa,mappings="[1855 1990] [2579 2722] [3201 3274] [3539 3730] [10619 10794]")
#cropped [1991 2021] [4867 5004] [7879 8106] [9553 9896] [10053 10148] [10417 10548] [25819 25878] [33611 33706] [23677 24087] [31940 32311] [36570 36929]
#[3761 3898] [11305 11396] [36150 36293] [10825 10968] [12493 12556] [18117 18188] [26718 26767] [30360 30647] [31084 31179] [34450 34555] [34556 34651] [36294 36413]  [42062 42229] [42230 42373]

dn=dn.resize.Spline36(1280,720)

#16 bit color depth for debanding
b16 = mvf.Depth(dn, 16)

dbfk = b16.f3kdb.Deband(range=15, y=88, cb=0, cr=0, grainy=0, grainc=0, output_depth=16)
mask = kgf.retinex_edgemask(b16).std.Binarize(5000).std.Inflate()
merged = core.std.MaskedMerge(dbfk, b16, mask)
merged = mvf.Depth(merged, 8)
dn=fvf.ReplaceFramesSimple(dn, merged, mappings="[1835 1990] [2423 2722] [2723 2842] [3179 3586] [3491 3538] [4259 5062] [5878 5913] [5950 6410] [7778 7849] [8359 8394] [8563 8984] [9301 9456] [9897 10052] [10261 10356] [10795 11196] [11305 11468] [11722 12249] [12454 12672] [13121 13222] [13414 13569] [13834 13857] [14080 14127] [15265 15349] [15905 16011] [16454 16513] [16607 16654] [16702 16865] [16986 17098] [17155 17222] [17671 17746] [17808 17855] [18706 19229] [20098 20157] [20824 20847] [21067 21150] [22746 22829] [23209 23461] [23545 23676] [24442 24682] [25066 25161] [25495 25542] [25623 25818] [25819 25878] [26718 26767] [26798 27119] [27298 27629] [28170 28217] [28928 29275] [30892 30939] [31252 31371] [31576 31939] [31940 32365] [31880 32311] [32312 32365] [32414 32857] [32858 32990] [33053 33094] [33267 33328] [33419 33550] [33911 34030] [34127 34449] [34748 34783] [34784 34920] [36294 36413] [36510 36569] [37179 37423] [37582 37610] [37703 37810] [37943 38054] [40076 40123] [40245 40423] [40424 41246] [41421 41802] [42902 43105] [43106 43201] [43358 43477] [43478 43645] [43850 44186] [44187 44342] [44343 44574] [44575 44658] [45211 45374] [45423 45542] [45543 45698] [45903 46058] [46767 47006] [48121 48180] [48241 48408] [48581 48712] [48781 48840] [48841 48900] [48901 48948] [48949 49080] [49225 49676] [49943 50341] [50930 51109] [51424 52179] [54081 54116] [54377 54601] [54804 54899] [55262 56057] [55438 55509] [55658 55792] [56854 56877] [56995 57214] [57277 57348] [58444 58502] [58742 58770] [59722 59834] [64256 64368] [64984 65397] [65442 65549]")

dbfk = b16.f3kdb.Deband(range=15, y=88, cb=88, cr=88, grainy=5, grainc=0, output_depth=16)
mask = kgf.retinex_edgemask(b16).std.Binarize(5000).std.Inflate()
merged = core.std.MaskedMerge(dbfk, b16, mask)
merged = mvf.Depth(merged, 8)
dn=fvf.ReplaceFramesSimple(dn, merged, mappings="[34784 34920]")

dbfk = b16.f3kdb.Deband(range=15, y=48, cb=48, cr=48, grainy=5, grainc=5, output_depth=16)
mask = kgf.retinex_edgemask(b16).std.Binarize(5000).std.Inflate()
merged = core.std.MaskedMerge(dbfk, b16, mask)
merged = mvf.Depth(merged, 8)
sfdbfk=fvf.ReplaceFramesSimple(dn, merged, mappings="[389 730] [731 850] [1067 1258] [8395 8442] [1463 1606] [1715 1834] [7646 7724] [38763 38858] [56058 56247] [56878 56938] [56452 56853] [57024 57047] [57349 57444] [10549 10618] [14224 14247] [14278 14441] [15052 15074] [15114 15136] [16273 16290] [18189 18464] [19230 19310] [21492 21533] [22411 22671] [24088 24168] [25975 26055] [26538 26717] [27630 27701] [27942 28169] [28424 28519] [28856 28927] [33329 33418] [35186 35207] [35479 35646] [36039 36077] [39354 39449] [40124 40243] [41803 41893] [42374 42613] [42614 42901] [45377 45422] [46359 46514] [47369 47462] [47865 47996] [53056 53415] [54021 54080] [57445 57788] [59281 59401]")

#51973

#f3kdb deband
dbf = b16.f3kdb.Deband()
dbf8 = mvf.Depth(dbf,8)
sfdbf=fvf.ReplaceFramesSimple(sfdbg, dbf8, mappings="[108 262] [36930 37001]")

sfdbf.set_output()

#Using ITA Blu-ray.
