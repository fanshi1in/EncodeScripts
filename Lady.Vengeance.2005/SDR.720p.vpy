import vapoursynth as vs
core = vs.get_core()
import fvsfunc as fvf
import havsfunc as haf
from debandmask import *
import kagefunc as kgf
from adptvgrnMod import *
from vsutil import get_y, iterate
from rekt import rektlvls

src = core.ffms2.Source("/home/a/Encoding/lady_vengeance/Sympathy.for.Lady.Vengeance.2005.GBR.BluRay.Remux.1080p.AVC.DTS-HD.MA.5.1-decibeL.mkv").std.Crop(top=132, bottom=132)

s16 = fvf.Depth(src, 16)

fdh = haf.FineDehalo(s16, rx=2.2, darkstr=1.5, brightstr=1.5, showmask=0)
hdr = haf.HQDeringmod(fdh, mrad=2, show=False)
snf = fvf.rfs(s16, hdr, "[742 811]")

dbf = core.f3kdb.Deband(snf, range=15, y=80, cb=72, cr=72, grainy=16, grainc=16, dynamic_grain=False, keep_tv_range=True, output_depth=16)
msk = debandmask(s16, lothr=500, hithr=584).std.Inflate()
mrg = core.std.MaskedMerge(dbf, snf, msk, planes=0)
grn = adptvgrnMod(mrg, strength=.4, size=1.7, sharp=60, static=False, grain_chroma=True, luma_scaling=8)
snf = fvf.rfs(snf, grn, "[0 3138]")

dbf = core.f3kdb.Deband(s16, range=20, y=72, cb=88, cr=88, grainy=24, grainc=16, dynamic_grain=True, keep_tv_range=True, output_depth=16)
msk = kgf.retinex_edgemask(s16).std.Binarize(9500).std.Maximum().std.Inflate()
mrg = core.std.MaskedMerge(dbf, s16, msk)
grn = adptvgrnMod(mrg, strength=4, size=2, sharp=40, static=False, grain_chroma=True, luma_scaling=12).std.Expr("x 4096 < x 4096 - abs 4096 + x ?")
snf = fvf.rfs(snf, grn, "[12862 12937] [13946 14375] [14376 14459] [19317 19698] [19746 19836] [19913 19959] [20583 20654] [23803 23856] [23857 23989] [24191 24228] [25816 26006] [27835 27883] [31302 31454] [31636 32072] [39567 39795] [39820 39927] [46193 46605] [50251 50596] [61130 61205] [61477 61603] [63841 64508] [72146 72245] [73769 73935] [74605 74635] [79861 80064] [87498 87784] [93805 93878] [95806 95833] [96200 96297] [97014 97090] [97340 103550] [103624 104127] [106088 106316] [109172 109291] [109828 110352] [114799 115007] [127189 127225] [143005 143048] [143267 143299] [148284 148922] [149487 150256] [150380 150534] [150895 151022]")

def fixsplit(clip, x, left_bb=0, right_bb=0, left_cf=0, right_cf=0, left_fb=0, right_fb=0, radius=10):
    cRight = core.std.Crop(clip, left=x)
    cRight = haf.bbmod(cRight, cLeft=right_bb, cRight=0, cTop=0, cBottom=0).edgefixer.ContinuityFixer(left=right_cf, right=0, bottom=0, top=0, radius=radius).fb.FillBorders(left=right_fb)
    cLeft = core.std.Crop(clip, right=clip.width - x)
    cLeft = haf.bbmod(cLeft, cLeft=0, cRight=left_bb, cTop=0, cBottom=0).edgefixer.ContinuityFixer(left=0, right=left_cf, bottom=0, top=0, radius=radius).fb.FillBorders(right=left_fb)
    return core.std.StackHorizontal([cLeft, cRight])

fxs = fixsplit(s16, 966, 7, 0, [3, 1, 1], [3, 0, 0])
snf = fvf.rfs(snf, fxs, "[94956 95028]")
snf = fvf.rfs(snf, fixsplit(s16, 966, left_cf=[5, 0, 0], right_cf=[3, 0, 0]), "[95029 95059]")
snf = fvf.rfs(snf, fixsplit(snf, 960, left_cf=[2, 0, 0], right_cf=[0, 0, 0]), "95029")
snf = fvf.rfs(snf, fixsplit(s16, 968, left_cf=[0, 3, 3], right_cf=[3, 0, 0]), "[94854 94908]")
snf = fvf.rfs(snf, fixsplit(s16, 968, left_cf=[1, 0, 0], right_cf=[3, 0, 0]), "[94913 94946] 94948")
snf = fvf.rfs(snf, fixsplit(s16, 966, left_cf=[1, 0, 0], right_cf=[3, 0, 0]), "94947 94949 [94950 94955]")
snf = fvf.rfs(snf, fixsplit(snf, 260, 4, left_cf=[3, 1, 1], right_cf=[1, 1, 1]), "94950")
snf = fvf.rfs(snf, fixsplit(snf, 370, left_cf=[2, 2, 2], right_cf=[1, 1, 1]), "94951")
snf = fvf.rfs(snf, fixsplit(snf, 484, left_cf=[2, 2, 2], right_cf=[2, 1, 1]), "94952")
snf = fvf.rfs(snf, fixsplit(snf, 600, left_cf=[0, 2, 2], right_cf=[2, 1, 1]), "94953")
snf = fvf.rfs(snf, fixsplit(snf, 720, left_cf=[2, 0, 0], right_cf=[1, 1, 1]), "94954")
snf = fvf.rfs(snf, fixsplit(snf, 840, left_cf=[2, 0, 0], right_cf=[0, 0, 0]), "94955")
snf = fvf.rfs(snf, fixsplit(snf, 930, left_bb=0, right_bb=3, left_cf=[2, 1, 1], right_cf=[1, 0, 0]), "[95303 95480]")
snf = fvf.rfs(snf, fixsplit(snf, 934, left_bb=3, right_bb=2, left_cf=[2, 1, 1], right_cf=[0, 2, 2], left_fb=1, right_fb=0), "[95481 95823]")

snf = fvf.rfs(snf, fixsplit(s16, 980, left_cf=[1, 0, 0], right_cf=[1, 0, 0]), "95060")
snf = fvf.rfs(snf, fixsplit(s16, 994, left_cf=[2, 0, 0], right_cf=[3, 1, 1]), "95061")
snf = fvf.rfs(snf, fixsplit(s16, 994, left_cf=[2, 0, 0], right_cf=[3, 1, 1]), "95061")
snf = fvf.rfs(snf, fixsplit(s16, 1008, left_bb=3, right_bb=5, left_cf=[1, 0, 0], right_cf=[0, 1, 1]), "95062")
snf = fvf.rfs(snf, fixsplit(s16, 1024, left_bb=0, right_bb=3, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95063")
snf = fvf.rfs(snf, fixsplit(s16, 1038, left_bb=0, right_bb=3, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95064")
snf = fvf.rfs(snf, fixsplit(s16, 1052, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95065")
snf = fvf.rfs(snf, fixsplit(s16, 1068, left_bb=3, right_bb=3, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95066")
snf = fvf.rfs(snf, fixsplit(s16, 1082, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95067")
snf = fvf.rfs(snf, fixsplit(s16, 1096, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95068")
snf = fvf.rfs(snf, fixsplit(s16, 1112, left_bb=0, right_bb=3, left_cf=[1, 0, 0], right_cf=[0, 1, 1]), "95069")
snf = fvf.rfs(snf, fixsplit(s16, 1126, left_bb=0, right_bb=3, left_cf=[5, 0, 0], right_cf=[0, 1, 1]), "95070")
snf = fvf.rfs(snf, fixsplit(s16, 1142, left_bb=0, right_bb=2, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95071")
snf = fvf.rfs(snf, fixsplit(s16, 1156, left_bb=0, right_bb=3, left_cf=[1, 0, 0], right_cf=[0, 1, 1]), "95072")
snf = fvf.rfs(snf, fixsplit(s16, 1170, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95073")
snf = fvf.rfs(snf, fixsplit(s16, 1186, left_bb=0, right_bb=2, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95074")
snf = fvf.rfs(snf, fixsplit(s16, 1200, left_bb=0, right_bb=4, left_cf=[1, 0, 0], right_cf=[0, 1, 1]), "95075")
snf = fvf.rfs(snf, fixsplit(s16, 1214, left_bb=3, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95076")
snf = fvf.rfs(snf, fixsplit(s16, 1228, left_bb=1, right_bb=6, left_cf=[1, 0, 0], right_cf=[1, 1, 1], radius=15), "95077")
snf = fvf.rfs(snf, fixsplit(s16, 1244, left_bb=0, right_bb=3, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95078")
snf = fvf.rfs(snf, fixsplit(s16, 1258, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95079")
snf = fvf.rfs(snf, fixsplit(s16, 1274, left_bb=0, right_bb=4, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95080")
snf = fvf.rfs(snf, fixsplit(s16, 1288, left_bb=0, right_bb=3, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95081")
snf = fvf.rfs(snf, fixsplit(s16, 1302, left_bb=0, right_bb=5, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95082")
snf = fvf.rfs(snf, fixsplit(s16, 1316, left_bb=0, right_bb=5, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95083")
snf = fvf.rfs(snf, fixsplit(s16, 1332, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95084")
snf = fvf.rfs(snf, fixsplit(s16, 1346, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95085")
snf = fvf.rfs(snf, fixsplit(s16, 1360, left_bb=0, right_bb=5, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95086")
snf = fvf.rfs(snf, fixsplit(s16, 1376, left_bb=4, right_bb=5, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95087")
snf = fvf.rfs(snf, fixsplit(s16, 1390, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95088")
snf = fvf.rfs(snf, fixsplit(s16, 1404, left_bb=0, right_bb=5, left_cf=[0, 0, 0], right_cf=[1, 1, 1]), "95089")
snf = fvf.rfs(snf, fixsplit(s16, 1418, left_bb=0, right_bb=5, left_cf=[2, 0, 0], right_cf=[1, 1, 1]), "95090")
snf = fvf.rfs(snf, fixsplit(s16, 1432, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95091")
snf = fvf.rfs(snf, fixsplit(s16, 1446, left_bb=0, right_bb=5, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95092")
snf = fvf.rfs(snf, fixsplit(s16, 1460, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95093")
snf = fvf.rfs(snf, fixsplit(s16, 1474, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95094")
snf = fvf.rfs(snf, fixsplit(s16, 1486, left_bb=0, right_bb=5, left_cf=[1, 0, 0], right_cf=[1, 1, 1], radius=5), "95095")
snf = fvf.rfs(snf, fixsplit(s16, 1500, left_bb=0, right_bb=5, left_cf=[4, 0, 0], right_cf=[1, 1, 1]), "95096")
snf = fvf.rfs(snf, fixsplit(s16, 1514, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95097")
snf = fvf.rfs(snf, fixsplit(s16, 1528, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95098")
snf = fvf.rfs(snf, fixsplit(s16, 1542, left_bb=0, right_bb=3, left_cf=[6, 0, 0], right_cf=[0, 1, 1]), "95099")
snf = fvf.rfs(snf, fixsplit(s16, 1556, left_bb=0, right_bb=3, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95100")
snf = fvf.rfs(snf, fixsplit(s16, 1568, left_bb=0, right_bb=5, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95101")
snf = fvf.rfs(snf, fixsplit(s16, 1582, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95102")
snf = fvf.rfs(snf, fixsplit(s16, 1596, left_bb=0, right_bb=4, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95103")
snf = fvf.rfs(snf, fixsplit(s16, 1610, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95104")
snf = fvf.rfs(snf, fixsplit(s16, 1622, left_bb=5, right_bb=6, left_cf=[1, 0, 0], right_cf=[1, 1, 1]), "95105")
snf = fvf.rfs(snf, fixsplit(s16, 1636, left_bb=0, right_bb=4, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95106")
snf = fvf.rfs(snf, fixsplit(s16, 1650, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95107")
snf = fvf.rfs(snf, fixsplit(s16, 1664, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95108")
snf = fvf.rfs(snf, fixsplit(s16, 1678, left_bb=0, right_bb=3, left_cf=[5, 0, 0], right_cf=[0, 1, 1]), "95109")
snf = fvf.rfs(snf, fixsplit(s16, 1690, left_bb=0, right_bb=5, left_cf=[3, 0, 0], right_cf=[1, 1, 1]), "95110")
snf = fvf.rfs(snf, fixsplit(s16, 1704, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95111")
snf = fvf.rfs(snf, fixsplit(s16, 1718, left_bb=2, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95112")
snf = fvf.rfs(snf, fixsplit(s16, 1732, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95113")
snf = fvf.rfs(snf, fixsplit(s16, 1746, left_bb=0, right_bb=2, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95114")
snf = fvf.rfs(snf, fixsplit(s16, 1760, left_bb=0, right_bb=3, left_cf=[4, 0, 0], right_cf=[0, 1, 1]), "95115")
snf = fvf.rfs(snf, fixsplit(s16, 1772, left_bb=0, right_bb=3, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95116")
snf = fvf.rfs(snf, fixsplit(s16, 1786, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95117")
snf = fvf.rfs(snf, fixsplit(s16, 1800, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95118")
snf = fvf.rfs(snf, fixsplit(s16, 1814, left_bb=0, right_bb=4, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95119")
snf = fvf.rfs(snf, fixsplit(s16, 1828, left_bb=0, right_bb=5, left_cf=[3, 0, 0], right_cf=[1, 1, 1]), "95120")
snf = fvf.rfs(snf, fixsplit(s16, 1840, left_bb=0, right_bb=4, left_cf=[0, 0, 0], right_cf=[0, 1, 1]), "95121")
snf = fvf.rfs(snf, fixsplit(s16, 1862, left_bb=0, right_bb=2, left_cf=[3, 0, 0], right_cf=[0, 1, 1]), "95122")
snf = fvf.rfs(snf, fixsplit(s16, 1882, left_bb=0, right_bb=3, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95123")
snf = fvf.rfs(snf, fixsplit(s16, 1898, left_bb=0, right_bb=4, left_cf=[2, 0, 0], right_cf=[0, 1, 1]), "95124")
snf = fvf.rfs(snf, fixsplit(s16, 1918, left_bb=0, right_bb=1, left_cf=[2, 0, 0], right_cf=[0, 0, 0]), "95125 95126")

snf = fvf.rfs(snf, fixsplit(s16, 948, left_bb=0, right_bb=1, left_cf=[2, 0, 0], right_cf=[0, 0, 0]), "95296")
snf = fvf.rfs(snf, fixsplit(snf, 956, left_bb=0, right_bb=0, left_cf=[3, 0, 0], right_cf=[3, 2, 2]), "95296")
snf = fvf.rfs(snf, fixsplit(s16, 952, left_bb=0, right_bb=0, left_cf=[2, 0, 0], right_cf=[1, 0, 0]), "95297")
snf = fvf.rfs(snf, fixsplit(snf, 1152, left_bb=0, right_bb=0, left_cf=[4, 1, 1], right_cf=[3, 0, 0]), "95297")
snf = fvf.rfs(snf, fixsplit(s16, 954, left_bb=0, right_bb=0, left_cf=[2, 0, 0], right_cf=[1, 0, 0]), "[95298 95302]")
snf = fvf.rfs(snf, fixsplit(s16, 1450, left_bb=0, right_bb=4, left_cf=[2, 1, 1], right_cf=[0, 1, 1]), "95298")
snf = fvf.rfs(snf, fixsplit(s16, 1764, left_bb=0, right_bb=0, left_cf=[2, 0, 0], right_cf=[0, 0, 0]), "95299")

blk = core.std.BlankClip(s16, color=[16 << 8, 128 << 8, 128 << 8])
snf = fvf.rfs(snf, blk, "[160392 160626]")
bmk = core.std.MaskedMerge(blk, s16, core.std.Binarize(get_y(s16), 7000).std.Maximum())
bme = core.std.Expr(s16, "x {} -".format(5 << 8)).std.Merge(bmk, [0, 1])
bme = core.std.MaskedMerge(bme, blk, bme.std.Binarize(4100, v0=65535, v1=0))
snf = fvf.rfs(snf, bme, "[160627 161246] [162392 165352] [165550 165633]")

dbb = core.f3kdb.Deband(s16, y=100, cr=100, cb=100, range=10, grainy=0, grainc=0, keep_tv_range=True, output_depth=16)
bme = core.std.Expr(dbb, "x {} -".format(5 << 8)).std.Merge(bmk, [0, 1])
bme = core.std.MaskedMerge(bme, blk, bme.std.Binarize(4100, v0=65535, v1=0))
snf = fvf.rfs(snf, bme, "[161247 162391] [165353 165549]")

out = fvf.Depth(snf, 8)

out.set_output()